import ProfileContainer from "@/components/Profile/ProfileContainer";
import { store } from "@/store";
import axios from "axios";
import type { GetStaticProps } from "next";
import Head from "next/head";
import { useRouter } from "next/router";
import { useCallback, useEffect, useState } from "react";
import { useSnapshot } from "valtio";

const OrderHistoryPage = () => {
  const [data, setData] = useState<GetOrder[]>([]);
  const [isLoading, setIsLoading] = useState<boolean>(true);
  const { user } = useSnapshot(store);

  const fetcher = useCallback(async (url: string) => {
    let response: { data: { docs: GetOrder[] } } = await axios.get(url);
    let filterData = response.data.docs.filter((e) => e.status >= "3");
    setIsLoading(false);
    setData(filterData);
  }, []);

  const { push } = useRouter();

  useEffect(() => {
    if (user) {
      fetcher(
        `${
          process.env.NEXT_PUBLIC_PAYLOAD_SERVER
        }/api/orders?where[orderBy.value][equals]=${user!.id}`
      );
    } else {
      push("/login");
    }
  }, [user, push, fetcher]);

  return (
    <>
      <Head>
        <title>ProCupp - Order History</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <ProfileContainer isLoading={isLoading} data={data} />
    </>
  );
};

export default OrderHistoryPage;

export const getStaticProps: GetStaticProps = async (context) => {
  let messages = await axios.get(
    `${process.env.NEXT_PUBLIC_PAYLOAD_SERVER}/api/languages?where[locale][equals]=${context.locale}`
  );

  return {
    props: {
      messages: messages.data.docs[0].data,
      // messages: (await import(`../messages/${context.locale}.json`)).default,
    },
    revalidate: 60,
  };
};
