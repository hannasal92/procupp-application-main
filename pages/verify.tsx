import type {
  InferGetServerSidePropsType,
  GetServerSideProps,
  GetStaticProps,
} from "next";
import Verify from "@/components/Login&Register/Verify/Verify";
import Head from "next/head";
import axios from "axios";

export const getServerSideProps = (async (context) => {
  let messages = await axios.get(
    `${process.env.NEXT_PUBLIC_PAYLOAD_SERVER}/api/languages?where[locale][equals]=${context.locale}`
  );
  try {
    let response = await axios.post(
      `${process.env.NEXT_PUBLIC_PAYLOAD_SERVER}/api/users/verify/${context.query.token}`
    );
    return {
      props: { isEmailVerfied: true, messages: messages.data.docs[0].data },
    };
  } catch (error) {
    return {
      props: { isEmailVerfied: false, messages: messages.data.docs[0].data },
    };
  }
}) satisfies GetServerSideProps<{ isEmailVerfied: boolean }>;

const VerifyPage = ({
  isEmailVerfied,
}: InferGetServerSidePropsType<typeof getServerSideProps>) => {
  return (
    <>
      <Head>
        <title>ProCupp - Verify Email</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Verify isEmailVerfied={isEmailVerfied} />
    </>
  );
};

export default VerifyPage;

// export const getStaticProps: GetStaticProps = async (context) => {
//   // let messages = await axios.get(
//   //   `${process.env.NEXT_PUBLIC_PAYLOAD_SERVER}/api/languages?where[locale][equals]=${context.locale}`
//   // );

//   return {
//     props: {
//       // messages: messages.data.docs[0].data,
//       messages: (await import(`../messages/${context.locale}.json`)).default,
//     },
//     revalidate: 60,
//   };
// };
